Guided Exercise: Deploying a Database Server on OpenShift
In this exercise, you will create and deploy a MySQL database pod on OpenShift using the oc new-app command.

Outcomes

You should be able to create and deploy a MySQL database pod on OpenShift.

On workstation, run the following command to set up the environment:

[student@workstation ~]$ lab openshift-resources start
Prepare the lab environment.

Load your classroom environment configuration.

Run the following command to load the environment variables created in the first guided exercise:

[student@workstation ~]$ source /usr/local/etc/ocp4.config
Log in to the OpenShift cluster.

[student@workstation ~]$ oc login -u ${RHT_OCP4_DEV_USER} -p \
> ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
Login successful
...output omitted...
Create a new project that contains your RHOCP developer username for the resources you create during this exercise:

[student@workstation ~]$ oc new-project ${RHT_OCP4_DEV_USER}-mysql-openshift
Now using project ...output omitted...
Create a new application from the rhscl/mysql-57-rhel7 container image using the oc new-app command.

This image requires that you use the -e option to set the MYSQL_USER, MYSQL_PASSWORD, MYSQL_DATABASE, and MYSQL_ROOT_PASSWORD environment variables.

Use the --docker-image option with the oc new-app command to specify the classroom private registry URI so that OpenShift does not try and pull the image from the internet:

[student@workstation ~]$ oc new-app --as-deployment-config \
> --docker-image=registry.access.redhat.com/rhscl/mysql-57-rhel7:latest \
> --name=mysql-openshift \
> -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=testdb \
> -e MYSQL_ROOT_PASSWORD=r00tpa55
--> Found container image 60726b3 (14 months old) from registry.access.redhat.com for "registry.access.redhat.com/rhscl/mysql-57-rhel7:latest"
...output omitted...
--> Creating resources ...
    imagestream.image.openshift.io "mysql-openshift" created
    deploymentconfig.apps.openshift.io "mysql-openshift" created
    service "mysql-openshift" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose svc/mysql-openshift'
    Run 'oc status' to view your app.
Verify that the MySQL pod was created successfully and view the details about the pod and its service.

Run the oc status command to view the status of the new application and verify that the deployment of the MySQL image was successful:

[student@workstation ~]$ oc status
In project ${RHT_OCP4_DEV_USER}-mysql-openshift on server ...

svc/mysql-openshift - 172.30.114.39:3306
  dc/mysql-openshift deploys istag/mysql-openshift:latest
    deployment #1 running for 11 seconds - 0/1 pods
...output omitted...
List the pods in this project to verify that the MySQL pod is ready and running:

[student@workstation ~]$ oc get pods
NAME                       READY   STATUS      RESTARTS   AGE
mysql-openshift-1-deploy   0/1     Completed   0          111s
mysql-openshift-1-xg665    1/1     Running     0          109s
NOTE
Notice the name of the running pod. You need this information to be able to log in to the MySQL database server later.

Use the oc describe command to view more details about the pod:

[student@workstation ~]$ oc describe pod mysql-openshift-1-xg665
Name:         mysql-openshift-1-xg665
Namespace:    ${RHT_OCP4_DEV_USER}-mysql-openshift
Priority:     0
Node:         master01/192.168.50.10
Start Time:   Fri, 13 Nov 2020 08:50:03 -0500
Labels:       deployment=mysql-openshift-1
              deploymentconfig=mysql-openshift
...output omitted...
Status:       Running
IP:           10.10.0.34
...output omitted...
List the services in this project and verify that the service to access the MySQL pod was created:

[student@workstation ~]$ oc get svc
NAME              TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
mysql-openshift   ClusterIP   172.30.121.55   <none>        3306/TCP   10m
Retrieve the details of the mysql-openshift service using the oc describe command and note that the service type is ClusterIP by default:

[student@workstation ~]$ oc describe service mysql-openshift
Name:              mysql-openshift
Namespace:         ${RHT_OCP4_DEV_USER}-mysql-openshift
Labels:            app=mysql-openshift
                   app.kubernetes.io/component=mysql-openshift
                   app.kubernetes.io/instance=mysql-openshift
Annotations:       openshift.io/generated-by: OpenShiftNewApp
Selector:          deploymentconfig=mysql-openshift
Type:              ClusterIP
IP:                172.30.121.55
Port:              3306-tcp  3306/TCP
TargetPort:        3306/TCP
Endpoints:         10.10.0.34:3306
Session Affinity:  None
Events:            <none>
View details about the deployment configuration (dc) for this application:

[student@workstation ~]$ oc describe dc mysql-openshift
Name:           mysql-openshift
Namespace:      ${RHT_OCP4_DEV_USER}-mysql-openshift
Created:        15 minutes ago
Labels:         app=mysql-openshift
                app.kubernetes.io/component=mysql-openshift
                app.kubernetes.io/instance=mysql-openshift
...output omitted...
Deployment #1 (latest):
   Name:           mysql-openshift-1
   Created:        15 minutes ago
   Status:         Complete
   Replicas:       1 current / 1 desired
   Selector:       deployment=mysql-openshift-1,deploymentconfig=mysql-openshift
   Labels:         app.kubernetes.io/component=mysql-openshift,app.kubernetes.io/instance=mysql-openshift,app=mysql-openshift,openshift.io/deployment-config.name=mysql-openshift
   Pods Status:    1 Running / 0 Waiting / 0 Succeeded / 0 Failed
...output omitted...
Expose the service creating a route with a default name and a fully qualified domain name (FQDN):

[student@workstation ~]$ oc expose service mysql-openshift
route.route.openshift.io/mysql-openshift exposed
[student@workstation ~]$ oc get routes
NAME              HOST/PORT                                       ...   PORT
mysql-openshift   mysql-openshift-${RHT_OCP4_DEV_USER}-mysql...   ...   3306-tcp
Connect to the MySQL database server and verify that the database was created successfully.

From the workstation machine, configure port forwarding between workstation and the database pod running on OpenShift using port 3306. The terminal will hang after executing the command.

[student@workstation ~]$ oc port-forward mysql-openshift-1-xg665 3306:3306
Forwarding from 127.0.0.1:3306 -> 3306
Forwarding from [::1]:3306 -> 3306
From the workstation machine open another terminal and connect to the MySQL server using the MySQL client.

[student@workstation ~]$ mysql -uuser1 -pmypa55 --protocol tcp -h localhost
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MySQL connection id is 2
Server version: 5.7.24 MySQL Community Server (GPL)

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MySQL [(none)]>
Verify the creation of the testdb database.

MySQL [(none)]> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| testdb             |
+--------------------+
2 rows in set (0.00 sec)
Exit from the MySQL prompt:

MySQL [(none)]> exit
Bye
Close the terminal and return to the previous one. Finish the port forwarding process by pressing Ctrl+C.

Forwarding from 127.0.0.1:3306 -> 3306
Forwarding from [::1]:3306 -> 3306
Handling connection for 3306
^C
Delete the project to remove all the resources within the project:

[student@workstation ~]$ oc delete project ${RHT_OCP4_DEV_USER}-mysql-openshift
Finish

On workstation, run the lab openshift-resources finish script to complete this lab.

[student@workstation ~]$ lab openshift-resources finish
This concludes the exercise.